var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.116,1,1.646]],["body/controllers/AppController.html",[0,1.567,1,2.311,2,1.171,3,0.454,4,0.381,5,0.381,6,2.367,7,0.914,8,2.019,9,3.811,10,2.001,11,0.048,12,2.367,13,3.167,14,3.911,15,3.167,16,1.171,17,2.923,18,1.509,19,0.801,20,0.615,21,3.167,22,2.367,23,1.509,24,2.001,25,2.367,26,2.923,27,0.454,28,0.131,29,1.727,30,1.727,31,2.367,32,1.727,33,2.923,34,0.033,35,0.033]],["title/modules/AppModule.html",[36,0.986,37,1.646]],["body/modules/AppModule.html",[1,2.399,2,1.407,3,0.388,4,0.326,5,0.326,11,0.047,19,0.875,20,0.526,24,2.185,25,2.022,27,0.388,28,0.112,34,0.03,35,0.03,36,1.243,37,3.134,38,1.001,39,1.407,40,2.022,41,2.022,42,2.022,43,2.484,44,1.928,45,2.484,46,1.812,47,1.289,48,1.289,49,2.497,50,2.074,51,2.403,52,2.497,53,2.497,54,2.497,55,2.497]],["title/injectables/AppService.html",[24,1.264,56,0.871]],["body/injectables/AppService.html",[3,0.466,4,0.392,5,0.392,7,0.939,8,2.055,9,3.224,11,0.048,15,3.224,16,1.203,18,1.55,19,0.546,20,0.632,24,1.808,27,0.466,28,0.135,32,1.774,34,0.034,35,0.034,56,1.245,57,1.55,58,2.432,59,3.982,60,2.555,61,3.003,62,1.774,63,1.363,64,1.203,65,1.363,66,3.982,67,3.982,68,2.055,69,3.003,70,3.003]],["title/controllers/AuthController.html",[0,1.116,71,1.646]],["body/controllers/AuthController.html",[0,1.412,2,1.412,3,0.547,4,0.459,5,0.459,11,0.047,19,0.803,20,0.742,27,0.547,28,0.158,29,2.082,30,2.082,34,0.038,35,0.038,71,2.608,72,2.853,73,2.853,74,3.523,75,2.189,76,2.853,77,3.523]],["title/modules/AuthModule.html",[36,0.986,43,1.437]],["body/modules/AuthModule.html",[2,1.534,3,0.44,4,0.369,5,0.369,11,0.047,19,0.845,20,0.596,27,0.44,28,0.127,34,0.033,35,0.033,36,1.356,38,1.135,39,1.534,43,2.685,44,2.005,46,1.976,47,1.462,48,1.462,50,2.263,51,2.621,71,2.563,75,2.271,76,2.293,78,2.293,79,2.832,80,2.293,81,2.832,82,2.832,83,2.293]],["title/injectables/AuthService.html",[56,0.871,75,1.264]],["body/injectables/AuthService.html",[3,0.597,4,0.501,5,0.501,11,0.046,19,0.699,20,0.809,27,0.597,28,0.173,34,0.04,35,0.04,56,1.456,57,1.984,75,2.115,84,3.113]],["title/classes/CreateUserDto.html",[28,0.125,85,1.264]],["body/classes/CreateUserDto.html",[3,0.321,4,0.269,5,0.269,7,0.646,10,2.76,11,0.046,16,1.616,19,0.556,23,1.066,27,0.321,28,0.137,34,0.026,35,0.026,60,2.328,63,1.955,64,1.616,65,1.389,68,2.095,85,1.389,86,1.22,87,3.486,88,1.413,89,1.58,90,2.544,91,2.947,92,2.496,93,4.032,94,4.509,95,4.793,96,2.065,97,2.065,98,3.06,99,2.065,100,2.065,101,2.065,102,2.065,103,2.478,104,1.389,105,3.06,106,2.065,107,2.065,108,4.305,109,3.06,110,3.06,111,4.032,112,4.032,113,1.672,114,2.76,115,2.065,116,2.065,117,2.065,118,1.672]],["title/modules/PrismaModule.html",[36,0.986,44,1.116]],["body/modules/PrismaModule.html",[3,0.474,4,0.398,5,0.398,11,0.046,19,0.732,20,0.643,27,0.474,28,0.137,34,0.034,35,0.034,36,1.425,38,1.223,39,1.613,44,2.088,46,2.078,47,1.576,48,1.576,50,2.379,119,2.472,120,2.472,121,2.472,122,2.488,123,3.053,124,4.026,125,3.053]],["title/injectables/PrismaService.html",[56,0.871,122,1.264]],["body/injectables/PrismaService.html",[3,0.416,4,0.349,5,0.349,7,0.838,8,1.903,11,0.048,16,1.478,18,1.903,19,0.671,20,0.564,27,0.416,28,0.12,34,0.032,35,0.032,56,1.153,57,1.383,62,1.584,63,1.217,64,1.074,65,1.217,122,1.674,126,2.17,127,2.986,128,4.216,129,4.082,130,3.687,131,4.92,132,3.687,133,4.541,134,2.68,135,2.17,136,2.68,137,2.17,138,2.68,139,2.986,140,2.68,141,2.68,142,2.68]],["title/classes/UpdateUserDto.html",[28,0.125,143,1.437]],["body/classes/UpdateUserDto.html",[3,0.565,4,0.475,5,0.475,11,0.046,19,0.819,23,1.879,27,0.565,28,0.164,34,0.039,35,0.039,85,1.653,86,2.151,88,2.492,127,2.948,143,2.325,144,2.948,145,3.64,146,2.492,147,2.492,148,3.64]],["title/classes/User.html",[28,0.125,104,1.264]],["body/classes/User.html",[3,0.402,4,0.338,5,0.338,7,0.81,11,0.045,16,2.002,27,0.402,28,0.116,34,0.031,35,0.031,60,2.629,63,1.88,64,2.002,65,2.312,86,1.531,89,1.86,90,2.447,91,2.835,92,2.835,103,2.917,104,1.636,149,2.098,150,4.141,151,2.835,152,4.141,153,4.476,154,2.591,155,2.591,156,2.591,157,2.591,158,2.591,159,2.591,160,2.591]],["title/controllers/UsersController.html",[0,1.116,161,1.646]],["body/controllers/UsersController.html",[0,0.616,2,0.616,3,0.239,4,0.201,5,0.201,7,0.481,8,1.26,10,2.579,11,0.048,12,1.245,13,2.797,16,1.51,18,1.945,19,0.685,20,0.324,21,3.247,22,1.245,23,0.794,27,0.239,28,0.069,29,0.909,30,0.909,31,3.051,32,2.226,34,0.021,35,0.021,60,2.318,62,2.041,63,1.568,64,1.384,65,1.568,73,1.245,85,1.82,90,2.369,104,1.108,143,2.25,146,2.365,147,1.671,151,3.27,161,1.442,162,1.245,163,4.491,164,2.797,165,1.976,166,1.976,167,1.976,168,1.538,169,1.538,170,1.538,171,1.538,172,1.245,173,1.538,174,1.538,175,1.245,176,1.538,177,3.034,178,1.538,179,1.245,180,1.538,181,2.441,182,1.538,183,2.441,184,2.441,185,1.538,186,1.538,187,1.378,188,1.245,189,1.245,190,1.245,191,1.538,192,1.538,193,1.538,194,1.538,195,1.538,196,1.538,197,1.538,198,1.538,199,1.538,200,1.538,201,1.538,202,1.538,203,1.538,204,1.538]],["title/modules/UsersModule.html",[36,0.986,45,1.437]],["body/modules/UsersModule.html",[2,1.534,3,0.44,4,0.369,5,0.369,11,0.047,19,0.845,20,0.596,27,0.44,28,0.127,34,0.033,35,0.033,36,1.356,38,1.135,39,1.534,44,2.005,45,2.685,46,1.976,47,1.462,48,1.462,50,2.263,51,2.621,83,2.293,161,2.563,187,2.271,188,2.293,205,2.293,206,2.832,207,2.293,208,2.832,209,2.832]],["title/injectables/UsersService.html",[56,0.871,187,1.264]],["body/injectables/UsersService.html",[3,0.21,4,0.176,5,0.176,7,0.423,8,1.136,11,0.048,16,1.598,18,1.822,19,0.688,20,0.285,27,0.21,28,0.061,29,0.799,30,0.799,32,2.086,34,0.019,35,0.019,56,0.688,57,0.698,60,2.219,62,2.086,63,1.811,64,1.516,65,1.602,85,1.456,89,1.136,90,1.3,91,1.905,92,1.506,104,1.263,118,1.782,122,1.456,129,3.907,139,3.064,143,1.655,146,1.506,147,1.506,151,2.846,164,2.597,165,1.782,166,1.782,167,1.782,172,1.782,175,1.782,179,1.782,187,0.999,189,1.095,190,1.095,210,1.095,211,2.783,212,2.783,213,1.352,214,1.352,215,1.352,216,2.201,217,2.201,218,1.352,219,3.784,220,3.53,221,1.352,222,1.352,223,1.352,224,1.352,225,1.352,226,1.352,227,1.352,228,4.157,229,1.352,230,1.352,231,1.352,232,1.782,233,2.201,234,3.207,235,1.352,236,1.352,237,1.352,238,3.207,239,3.207,240,1.352,241,1.352,242,1.352,243,1.352,244,1.352,245,1.352,246,1.352,247,1.352]],["title/coverage.html",[248,2.591]],["body/coverage.html",[0,1.694,1,1.591,5,0.351,6,2.181,11,0.046,24,1.223,28,0.19,34,0.032,35,0.032,56,1.423,58,2.181,64,1.079,71,1.591,72,2.181,75,1.223,84,2.181,85,1.223,87,2.181,88,2.533,104,1.223,122,1.223,126,2.181,143,1.39,144,2.181,149,2.181,161,1.591,162,2.181,187,1.223,210,2.181,248,1.843,249,2.693,250,2.693,251,2.693,252,5.33,253,3.7,254,4.55,255,2.181,256,2.693,257,2.181,258,2.693,259,2.693,260,3.7,261,2.693,262,2.693,263,2.693,264,2.693]],["title/dependencies.html",[39,1.34,265,1.889]],["body/dependencies.html",[11,0.048,20,0.619,23,1.517,28,0.176,34,0.034,35,0.034,39,1.177,113,2.379,137,2.379,232,2.379,266,4.915,267,2.938,268,2.938,269,2.938,270,2.938,271,3.925,272,2.938,273,2.938,274,2.938,275,2.938,276,2.938,277,2.938,278,4.419,279,2.938,280,2.938,281,2.938,282,2.938,283,2.938,284,2.938,285,2.938,286,2.938,287,2.938,288,2.938,289,2.938,290,2.938,291,2.938,292,2.938,293,2.938]],["title/miscellaneous/functions.html",[294,1.889,295,2.709]],["body/miscellaneous/functions.html",[7,1.273,11,0.041,34,0.041,35,0.041,255,3.298,257,4.159,294,3.298,295,3.298,296,4.073]],["title/index.html",[7,0.729,297,2.333,298,2.333]],["body/index.html",[4,0.327,11,0.046,34,0.03,35,0.03,68,1.717,114,1.717,135,2.031,248,1.717,299,2.508,300,2.508,301,3.522,302,2.508,303,2.508,304,2.508,305,2.508,306,2.508,307,4.07,308,2.508,309,2.508,310,2.508,311,2.508,312,4.95,313,2.508,314,2.508,315,4.82,316,2.508,317,2.508,318,3.522,319,2.508,320,2.508,321,2.508,322,2.508,323,3.522,324,3.522,325,2.508,326,2.508,327,2.508,328,3.522,329,3.522,330,2.508,331,2.508,332,2.508,333,2.508,334,2.508,335,2.031,336,2.508,337,2.508,338,2.508,339,2.508,340,2.508,341,2.508,342,2.508,343,2.508,344,2.508,345,2.508,346,2.031,347,2.508,348,2.508,349,2.508,350,2.508,351,2.508,352,2.508,353,2.031]],["title/modules.html",[38,1.517]],["body/modules.html",[11,0.039,34,0.039,35,0.039,37,2.195,38,1.488,43,1.917,44,1.488,45,1.917,335,4.169,354,5.148,355,5.148,356,5.148]],["title/overview.html",[357,3.065]],["body/overview.html",[2,1.048,11,0.046,24,1.89,34,0.031,35,0.031,37,3.101,38,1.048,39,1.453,40,2.118,41,2.118,42,2.118,43,2.585,44,2.046,45,2.585,46,1.872,47,1.35,48,1.35,57,1.35,75,1.89,78,2.118,80,2.118,86,1.546,119,2.118,120,2.118,121,2.118,122,2.274,187,1.89,205,2.118,207,2.118,357,2.118,358,3.626,359,3.626]],["title/properties.html",[89,1.727,265,1.889]],["body/properties.html",[11,0.047,34,0.041,35,0.041,89,2.056,114,2.727,346,3.226,353,3.226,360,3.984,361,3.984,362,3.984]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":252,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":361,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":253,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":236,"title":{},"body":{"injectables/UsersService.html":{}}}],["123456",{"_index":117,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["123456'})@isstring()@isnotempty",{"_index":101,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["3",{"_index":359,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":358,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["6.0.5",{"_index":272,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":266,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":105,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["amazing",{"_index":336,"title":{},"body":{"index.html":{}}}],["api",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["apioperation",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":108,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({description",{"_index":93,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apitags",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["apitags('status",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('user",{"_index":191,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":135,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":142,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["applications",{"_index":306,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":37,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":24,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":129,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":82,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":71,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":43,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":346,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":75,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":139,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":337,"title":{},"body":{"index.html":{}}}],["baseurl",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["bcrypt",{"_index":232,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.hash(dto.password",{"_index":235,"title":{},"body":{"injectables/UsersService.html":{}}}],["body",{"_index":184,"title":{},"body":{"controllers/UsersController.html":{}}}],["bomfim",{"_index":115,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["bomfim'})@isstring()@isnotempty",{"_index":99,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["boolean",{"_index":103,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":257,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":356,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":354,"title":{},"body":{"modules.html":{}}}],["bruna",{"_index":98,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["bruna@gmail.com",{"_index":116,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["bruna@gmail.com'})@isstring()@isemail()@isnotempty",{"_index":96,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["building",{"_index":302,"title":{},"body":{"index.html":{}}}],["class",{"_index":28,"title":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":86,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":78,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":79,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":80,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":119,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":121,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":120,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":205,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":206,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":207,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["const",{"_index":233,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor",{"_index":213,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(prisma",{"_index":214,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":192,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":248,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":146,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":193,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":168,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(dto",{"_index":217,"title":{},"body":{"injectables/UsersService.html":{}}}],["createdat",{"_index":150,"title":{},"body":{"classes/User.html":{}}}],["createuserdto",{"_index":85,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["data",{"_index":234,"title":{},"body":{"injectables/UsersService.html":{}}}],["date",{"_index":153,"title":{},"body":{"classes/User.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":226,"title":{},"body":{"injectables/UsersService.html":{}}}],["defined",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":177,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":202,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":176,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleted",{"_index":247,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependencies",{"_index":39,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":114,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":314,"title":{},"body":{"index.html":{}}}],["docs",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":219,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/create",{"_index":189,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":190,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":325,"title":{},"body":{"index.html":{}}}],["edit",{"_index":181,"title":{},"body":{"controllers/UsersController.html":{}}}],["efficient",{"_index":303,"title":{},"body":{"index.html":{}}}],["email",{"_index":90,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["enableshutdownhooks",{"_index":130,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":132,"title":{},"body":{"injectables/PrismaService.html":{}}}],["entities/user.entity",{"_index":231,"title":{},"body":{"injectables/UsersService.html":{}}}],["example",{"_index":95,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["export",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":124,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":271,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":127,"title":{},"body":{"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{}}}],["false",{"_index":118,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["false})@isboolean",{"_index":106,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":164,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":165,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":197,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":172,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":301,"title":{},"body":{"index.html":{}}}],["function",{"_index":256,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":295,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":196,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id')@apioperation({summary",{"_index":173,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apioperation({summary",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["getstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getstatus(baseurl",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":297,"title":{"index.html":{}},"body":{}}],["grow",{"_index":332,"title":{},"body":{"index.html":{}}}],["here",{"_index":343,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":350,"title":{},"body":{"index.html":{}}}],["id",{"_index":151,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":250,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":138,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["inestapplication",{"_index":133,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":56,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":311,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":313,"title":{},"body":{"index.html":{}}}],["isboolean",{"_index":109,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":110,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":111,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":112,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["join",{"_index":339,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["kamil",{"_index":347,"title":{},"body":{"index.html":{}}}],["license",{"_index":353,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":329,"title":{},"body":{"index.html":{}}}],["local",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["message",{"_index":245,"title":{},"body":{"injectables/UsersService.html":{}}}],["metadata",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":294,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":328,"title":{},"body":{"index.html":{}}}],["mode",{"_index":318,"title":{},"body":{"index.html":{}}}],["module",{"_index":36,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":38,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":342,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":348,"title":{},"body":{"index.html":{}}}],["name",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":307,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":352,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":267,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":268,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":269,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["node.js",{"_index":300,"title":{},"body":{"index.html":{}}}],["npm",{"_index":312,"title":{},"body":{"index.html":{}}}],["object",{"_index":225,"title":{},"body":{"injectables/UsersService.html":{}}}],["onmoduleinit",{"_index":131,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":330,"title":{},"body":{"index.html":{}}}],["optional",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":357,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":265,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":186,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":62,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partial",{"_index":242,"title":{},"body":{"injectables/UsersService.html":{}}}],["partialtype",{"_index":145,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":148,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":91,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":185,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":199,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":180,"title":{},"body":{"controllers/UsersController.html":{}}}],["please",{"_index":340,"title":{},"body":{"index.html":{}}}],["post",{"_index":183,"title":{},"body":{"controllers/UsersController.html":{}}}],["post()@apioperation({summary",{"_index":169,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["prisma",{"_index":216,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.service",{"_index":125,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":137,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":128,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":44,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":122,"title":{"injectables/PrismaService.html":{}},"body":{"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":211,"title":{},"body":{"injectables/UsersService.html":{}}}],["production",{"_index":320,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":299,"title":{},"body":{"index.html":{}}}],["project",{"_index":331,"title":{},"body":{"index.html":{}}}],["properties",{"_index":89,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["providers",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["read",{"_index":341,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":166,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":203,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":175,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":310,"title":{},"body":{"index.html":{}}}],["reset",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":92,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":315,"title":{},"body":{"index.html":{}}}],["running",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":304,"title":{},"body":{"index.html":{}}}],["select",{"_index":238,"title":{},"body":{"injectables/UsersService.html":{}}}],["server",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"index.html":{}}}],["side",{"_index":305,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":334,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":296,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":58,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module.ts",{"_index":81,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":255,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":83,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":123,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":230,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":126,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":134,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":136,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/users/dto/create",{"_index":87,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":144,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":149,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:2",{"_index":156,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:3",{"_index":157,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:4",{"_index":155,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:5",{"_index":158,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":159,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":154,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:9",{"_index":160,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":162,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:16",{"_index":170,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:24",{"_index":171,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:32",{"_index":174,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:40",{"_index":182,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:48",{"_index":178,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":208,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":210,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":229,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:16",{"_index":215,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:20",{"_index":218,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:31",{"_index":221,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:35",{"_index":222,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:44",{"_index":224,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:53",{"_index":223,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":316,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":319,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":321,"title":{},"body":{"index.html":{}}}],["started",{"_index":298,"title":{"index.html":{}},"body":{}}],["starter",{"_index":309,"title":{},"body":{"index.html":{}}}],["statements",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["stay",{"_index":344,"title":{},"body":{"index.html":{}}}],["string",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["successfully",{"_index":246,"title":{},"body":{"injectables/UsersService.html":{}}}],["summary",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":335,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":355,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":263,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":324,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":327,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":326,"title":{},"body":{"index.html":{}}}],["tests",{"_index":323,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":333,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":140,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":141,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getstatus('http://localhost:3000",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["this.prisma.user.create",{"_index":237,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":244,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":240,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":241,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":243,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userselect",{"_index":239,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":194,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":195,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":198,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":204,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":201,"title":{},"body":{"controllers/UsersController.html":{}}}],["touch",{"_index":345,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":228,"title":{},"body":{"injectables/UsersService.html":{}}}],["twitter",{"_index":351,"title":{},"body":{"index.html":{}}}],["type",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typescript",{"_index":308,"title":{},"body":{"index.html":{}}}],["ui",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":322,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":220,"title":{},"body":{"injectables/UsersService.html":{}}}],["unlicensed",{"_index":362,"title":{},"body":{"properties.html":{}}}],["update",{"_index":167,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":200,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":179,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatedat",{"_index":152,"title":{},"body":{"classes/User.html":{}}}],["updateuserdto",{"_index":143,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user",{"_index":104,"title":{"classes/User.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":147,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":88,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":100,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":97,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":102,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:35",{"_index":107,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user`s",{"_index":94,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users",{"_index":163,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":209,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":188,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":161,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userselect",{"_index":212,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersmodule",{"_index":45,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":187,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":113,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":227,"title":{},"body":{"injectables/UsersService.html":{}}}],["version",{"_index":360,"title":{},"body":{"properties.html":{}}}],["view",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["watch",{"_index":317,"title":{},"body":{"index.html":{}}}],["website",{"_index":349,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":338,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'View application status'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @ApiOperation({\n\t\tsummary: \"View application status\",\n\t})  \n  getStatus() {\n    return this.appService.getStatus('http://localhost:3000');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [PrismaModule, UsersModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getStatus(baseUrl: string) {\n    return {\n\t\t\tstatus: \"Server is running! 🚀\",\n\t\t\tdocs: baseUrl + '/api',\n\t\t}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [AuthController],\n  providers: [AuthService]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s email', example: 'Bruna@gmail.com'})@IsString()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s name', example: 'Bruna Bomfim'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s password', example: '123456'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'If user is admin or server', example: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    description: 'User`s name',\n    example: 'Bruna Bomfim',\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({\n    description: 'User`s email',\n    example: 'Bruna@gmail.com',\n  })\n  @IsString()\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @ApiProperty({\n    description: 'User`s password',\n    example: '123456',\n  })\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty({\n    description: 'If user is admin or server',\n    example: false,\n  })\n  @IsBoolean()\n  role?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService]\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  name: string;\n  email: string;\n  password: string;\n  role?: boolean;\n\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a user'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'View all users'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'View users by id or email'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete users by id or email'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Edit users by id email'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('user')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @ApiOperation({\n\t\tsummary: \"Create a user\",\n\t})\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  @ApiOperation({\n\t\tsummary: \"View all users\",\n\t})\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n\t\tsummary: \"View users by id or email\",\n\t})\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n  \n  @Patch(':id')\n  @ApiOperation({\n\t\tsummary: \"Edit users by id email\",\n\t})\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({\n\t\tsummary: \"Delete users by id or email\",\n\t})\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    name: true,\n    email: true,\n    password: false,\n    role: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UsersService {\n  private userSelect = {\n    id: true,\n    name: true,\n    email: true,\n    password: false,\n    role: true,\n  };\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateUserDto) {\n    const data: User = {\n      ...dto,\n      password: await bcrypt.hash(dto.password, 10),\n    };\n    return await this.prisma.user.create({\n      data,\n      select: this.userSelect,\n    });\n  }\n\n  async findAll() {\n    return await this.prisma.user.findMany({ select: this.userSelect });\n  }\n\n  async findOne(id: string) {\n    return await this.prisma.user.findUnique({\n      where: {\n        id,\n      },\n      select: this.userSelect,\n    });\n  }\n\n  async update(id: string, dto: UpdateUserDto) {\n    const data: Partial = { ...dto };\n    return await this.prisma.user.update({\n      where: { id },\n      data,\n      select: this.userSelect,\n    });\n  }\n\n  async remove(id: string) {\n    await this.prisma.user.delete({\n      where: {\n        id,\n      },\n    });\n    return { message: 'User successfully deleted' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.0.5\n        \n            @prisma/client : ^4.1.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.5.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
