var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.27,1,1.809]],["body/controllers/AppController.html",[0,1.428,1,2.033,2,0.977,3,0.442,4,0.388,5,0.388,6,1.869,7,0.785,8,1.795,9,3.548,10,1.596,11,0.041,12,1.869,13,2.73,14,3.336,15,3.942,16,0.977,17,2.283,18,3.336,19,3.336,20,3.336,21,3.336,22,3.336,23,3.336,24,4.611,25,4.974,26,4.816,27,4.335,28,3.336,29,3.336,30,1.795,31,0.863,32,0.562,33,2.73,34,1.869,35,1.229,36,1.887,37,1.869,38,2.283,39,0.442,40,0.202,41,1.392,42,1.392,43,1.869,44,2.283,45,2.283,46,1.869,47,1.869,48,1.392,49,2.283,50,0.024,51,0.024]],["title/modules/AppModule.html",[52,1.021,53,1.809]],["body/modules/AppModule.html",[1,2.535,2,1.529,3,0.486,4,0.427,5,0.427,11,0.041,31,1.09,32,0.619,36,2.382,37,2.056,39,0.486,40,0.222,50,0.026,51,0.026,52,1.229,53,3.362,54,1.075,55,1.529,56,2.056,57,2.056,58,2.056,59,2.678,60,2.129,61,2.678,62,1.923,63,1.352,64,1.352,65,2.512,66,2.178,67,2.497,68,2.512,69,2.512,70,2.512,71,2.512]],["title/injectables/AppService.html",[36,1.421,72,1.021]],["body/injectables/AppService.html",[3,0.591,4,0.518,5,0.518,7,1.049,8,2.199,9,3.345,11,0.042,15,3.345,16,1.305,30,1.642,31,0.668,32,0.752,36,1.957,39,0.591,40,0.269,48,1.859,50,0.029,51,0.029,72,1.406,73,1.642,74,2.497,75,4.087,76,2.763,77,3.05,78,1.859,79,1.461,80,1.305,81,1.461,82,4.087,83,4.087,84,2.132,85,3.05,86,3.05]],["title/controllers/AuthController.html",[0,1.27,87,1.809]],["body/controllers/AuthController.html",[0,1.548,2,1.548,3,0.7,4,0.614,5,0.614,11,0.041,31,1,32,0.891,39,0.7,40,0.319,41,2.204,42,2.204,50,0.033,51,0.033,87,2.783,88,2.96,89,2.96,90,2.96,91,2.395,92,2.96,93,3.616]],["title/modules/AuthModule.html",[52,1.021,59,1.597]],["body/modules/AuthModule.html",[2,1.677,3,0.555,4,0.487,5,0.487,11,0.041,31,1.051,32,0.707,39,0.555,40,0.253,50,0.028,51,0.028,52,1.348,54,1.227,55,1.677,59,2.91,60,2.22,62,2.109,63,1.543,64,1.543,66,2.389,67,2.739,87,2.722,91,2.484,92,2.347,94,2.347,95,2.868,96,2.347,97,2.868,98,2.868,99,2.347]],["title/injectables/AuthService.html",[72,1.021,91,1.421]],["body/injectables/AuthService.html",[3,0.769,4,0.675,5,0.675,11,0.04,31,0.87,32,0.978,39,0.769,40,0.351,50,0.035,51,0.035,72,1.664,73,2.137,91,2.316,100,3.25]],["title/classes/CreateUserDto.html",[40,0.262,101,1.421]],["body/classes/CreateUserDto.html",[3,0.399,4,0.35,5,0.35,7,0.708,10,2.881,11,0.04,16,1.764,31,0.677,35,1.109,39,0.399,40,0.273,50,0.022,51,0.022,76,2.497,79,2.115,80,1.764,81,1.48,84,2.16,101,1.48,102,1.255,103,3.616,104,1.439,105,1.663,106,2.693,107,3.087,108,2.593,109,4.123,110,4.639,111,4.949,112,2.06,113,2.06,114,3.091,115,2.06,116,2.06,117,2.06,118,2.06,119,2.53,120,1.323,121,3.091,122,2.06,123,2.06,124,4.418,125,3.091,126,3.091,127,4.123,128,4.123,129,1.686,130,2.881,131,2.06,132,2.06,133,2.06,134,1.686]],["title/modules/PrismaModule.html",[52,1.021,60,1.27]],["body/modules/PrismaModule.html",[3,0.601,4,0.527,5,0.527,11,0.04,31,0.906,32,0.765,39,0.601,40,0.274,50,0.03,51,0.03,52,1.422,54,1.329,55,1.77,60,2.319,62,2.225,63,1.671,64,1.671,66,2.52,135,2.541,136,2.541,137,2.541,138,2.737,139,3.104,140,4.135,141,3.104]],["title/injectables/PrismaService.html",[72,1.021,138,1.421]],["body/injectables/PrismaService.html",[3,0.524,4,0.46,5,0.46,7,0.93,8,2.026,11,0.042,16,1.611,30,2.026,31,0.825,32,0.667,39,0.524,40,0.239,50,0.027,51,0.027,72,1.295,73,1.456,78,1.649,79,1.295,80,1.158,81,1.295,138,1.803,142,2.214,143,3.082,144,4.331,145,4.279,146,3.765,147,5.096,148,3.765,149,4.682,150,2.706,151,2.214,152,2.706,153,2.214,154,2.706,155,3.082,156,2.706,157,2.706,158,2.706]],["title/classes/UpdateUserDto.html",[40,0.262,159,1.597]],["body/classes/UpdateUserDto.html",[3,0.725,4,0.636,5,0.636,11,0.041,31,1.022,35,2.015,39,0.725,40,0.331,50,0.034,51,0.034,101,1.793,102,2.283,104,2.617,143,3.065,159,2.511,160,3.065,161,3.745,162,2.617,163,2.617,164,3.745]],["title/classes/User.html",[40,0.262,120,1.27]],["body/classes/User.html",[3,0.506,4,0.444,5,0.444,7,0.898,11,0.04,16,2.215,39,0.506,40,0.231,50,0.026,51,0.026,76,2.844,79,2.034,80,2.215,81,2.53,102,1.592,105,1.977,106,2.59,107,2.969,108,2.969,119,3.006,120,1.572,165,2.137,166,4.249,167,2.969,168,4.249,169,4.61,170,2.612,171,2.612,172,2.612,173,2.612,174,2.612,175,2.612,176,2.612]],["title/controllers/UsersController.html",[0,1.27,177,1.809]],["body/controllers/UsersController.html",[0,0.65,2,0.65,3,0.294,4,0.258,5,0.258,7,0.522,8,1.313,10,2.678,11,0.042,12,1.243,13,2.864,16,1.64,30,2.063,31,0.839,32,0.374,33,3.349,34,1.243,35,0.817,39,0.294,40,0.134,41,0.926,42,0.926,43,1.243,47,3.137,48,2.336,50,0.018,51,0.018,76,2.483,78,2.133,79,1.676,80,1.498,81,1.676,89,1.243,101,1.959,106,2.494,120,1.044,159,2.406,162,2.445,163,1.705,167,3.443,177,1.487,178,1.243,179,4.613,180,2.864,181,1.996,182,1.996,183,1.996,184,1.519,185,1.519,186,1.519,187,1.519,188,1.243,189,1.519,190,1.519,191,1.243,192,1.519,193,3.057,194,1.519,195,1.243,196,1.519,197,2.439,198,1.519,199,2.439,200,2.439,201,1.519,202,1.463,203,1.243,204,1.243,205,1.243,206,1.519,207,1.519,208,1.519,209,1.519,210,1.519,211,1.519,212,1.519,213,1.519,214,1.519,215,1.519,216,1.519,217,1.519,218,1.519,219,1.519]],["title/modules/UsersModule.html",[52,1.021,61,1.597]],["body/modules/UsersModule.html",[2,1.677,3,0.555,4,0.487,5,0.487,11,0.041,31,1.051,32,0.707,39,0.555,40,0.253,50,0.028,51,0.028,52,1.348,54,1.227,55,1.677,60,2.22,61,2.91,62,2.109,63,1.543,64,1.543,66,2.389,67,2.739,99,2.347,177,2.722,202,2.484,203,2.347,220,2.347,221,2.868,222,2.347,223,2.868,224,2.868]],["title/injectables/UsersService.html",[72,1.021,202,1.421]],["body/injectables/UsersService.html",[3,0.258,4,0.226,5,0.226,7,0.458,8,1.179,11,0.042,16,1.741,30,1.925,31,0.843,32,0.328,39,0.258,40,0.118,41,0.811,42,0.811,48,2.18,50,0.016,51,0.016,72,0.753,73,0.716,76,2.37,78,2.18,79,1.948,80,1.647,81,1.713,101,1.549,105,1.179,106,1.335,107,1.951,108,1.531,120,1.195,134,1.793,138,1.549,145,4.074,155,3.149,159,1.741,162,1.531,163,1.531,167,2.97,180,2.648,181,1.793,182,1.793,183,1.793,188,1.793,191,1.793,195,1.793,202,1.049,204,1.089,205,1.089,225,1.089,226,2.792,227,2.792,228,1.331,229,1.331,230,1.331,231,2.191,232,2.191,233,1.331,234,3.848,235,3.577,236,1.331,237,1.331,238,1.331,239,1.331,240,1.331,241,1.331,242,1.331,243,4.25,244,1.331,245,1.331,246,1.331,247,1.793,248,2.191,249,3.236,250,1.331,251,1.331,252,1.331,253,3.236,254,3.236,255,1.331,256,1.331,257,1.331,258,1.331,259,1.331,260,1.331,261,1.331,262,1.331]],["title/changelog.html",[263,1.522,264,1.522,265,2.498]],["body/changelog.html",[11,0.037,50,0.037,51,0.037]],["title/contributing.html",[263,1.522,264,1.522,266,2.498]],["body/contributing.html",[11,0.037,50,0.037,51,0.037]],["title/coverage.html",[267,2.804]],["body/coverage.html",[0,1.858,1,1.658,5,0.462,6,2.226,11,0.04,36,1.302,40,0.384,50,0.027,51,0.027,72,1.614,74,2.226,80,1.164,87,1.658,88,2.226,91,1.302,100,2.226,101,1.302,103,2.226,104,2.641,120,1.164,138,1.302,142,2.226,159,1.464,160,2.226,165,2.226,177,1.658,178,2.226,202,1.302,225,2.226,267,1.901,268,2.72,269,2.72,270,2.72,271,2.72,272,2.72,273,5.489,274,2.72,275,4.693,276,2.226,277,2.72,278,2.226,279,2.72,280,2.72,281,3.779,282,2.72,283,2.72,284,2.72,285,2.226]],["title/dependencies.html",[55,1.523,286,2.044]],["body/dependencies.html",[11,0.042,32,0.735,35,1.605,40,0.355,46,3.294,50,0.029,51,0.029,55,1.276,129,2.44,153,2.44,247,2.44,287,5.093,288,2.981,289,2.981,290,2.981,291,2.981,292,2.981,293,2.981,294,2.981,295,2.981,296,2.981,297,2.981,298,4.556,299,2.981,300,2.981,301,2.981,302,2.981,303,2.981,304,2.981,305,2.981,306,2.981,307,2.981,308,2.981,309,2.981,310,2.981,311,2.981,312,2.981,313,2.981]],["title/miscellaneous/functions.html",[314,2.044,315,2.913]],["body/miscellaneous/functions.html",[7,1.453,11,0.036,50,0.036,51,0.036,276,3.459,278,4.386,314,3.459,315,3.459,316,4.226]],["title/index.html",[7,0.859,263,1.522,264,1.522]],["body/index.html",[4,0.429,11,0.041,50,0.026,51,0.026,84,1.764,130,1.764,151,2.066,267,1.764,317,2.524,318,2.524,319,3.586,320,2.524,321,2.524,322,2.524,323,2.524,324,2.524,325,4.171,326,2.524,327,2.524,328,2.524,329,2.524,330,5.126,331,2.524,332,2.524,333,4.983,334,2.524,335,2.524,336,3.586,337,2.524,338,2.524,339,2.524,340,2.524,341,3.586,342,3.586,343,2.524,344,2.524,345,2.524,346,3.586,347,3.586,348,2.524,349,2.524,350,2.524,351,2.524,352,2.524,353,2.066,354,2.524,355,2.524,356,2.524,357,2.524,358,2.524,359,2.524,360,2.524,361,2.524,362,2.524,363,2.524,364,2.066,365,2.524,366,2.524,367,2.524,368,2.524,369,2.524,370,2.524,371,2.066]],["title/modules.html",[54,1.717]],["body/modules.html",[11,0.034,50,0.034,51,0.034,53,2.332,54,1.638,59,2.059,60,1.638,61,2.059,353,4.388,372,5.362,373,5.362,374,5.362]],["title/overview.html",[375,3.284]],["body/overview.html",[2,1.129,11,0.04,36,2.045,50,0.027,51,0.027,53,3.325,54,1.129,55,1.583,56,2.159,57,2.159,58,2.159,59,2.794,60,2.267,61,2.794,62,1.991,63,1.42,64,1.42,73,1.42,91,2.045,94,2.159,96,2.159,102,1.608,135,2.159,136,2.159,137,2.159,138,2.485,202,2.045,220,2.159,222,2.159,375,2.159,376,3.699,377,3.699]],["title/properties.html",[105,1.915,286,2.044]],["body/properties.html",[11,0.041,50,0.036,51,0.036,105,2.221,130,2.884,364,3.377,371,3.377,378,4.127,379,4.127,380,4.127]],["title/todo.html",[263,1.522,264,1.522,381,2.498]],["body/todo.html",[11,0.036,50,0.036,51,0.036,52,1.419,90,3.377,120,1.766,285,3.377,382,4.127,383,4.127,384,4.127,385,4.127,386,4.127,387,4.127,388,4.127]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{}}}],["0",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":379,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":251,"title":{},"body":{"injectables/UsersService.html":{}}}],["123456",{"_index":133,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["123456'})@isstring()@isnotempty",{"_index":117,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["3",{"_index":377,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":376,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["6.0.5",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":121,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["amazing",{"_index":354,"title":{},"body":{"index.html":{}}}],["api",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["apioperation",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":124,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({description",{"_index":109,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apitags",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["apitags('status",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('user",{"_index":206,"title":{},"body":{"controllers/UsersController.html":{}}}],["aplicação",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":151,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":158,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["applications",{"_index":324,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":53,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":36,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":145,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"todo.html":{}}}],["auth.controller",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":87,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":59,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":364,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":91,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":155,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":355,"title":{},"body":{"index.html":{}}}],["baseurl",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["bcrypt",{"_index":247,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.hash(dto.password",{"_index":250,"title":{},"body":{"injectables/UsersService.html":{}}}],["body",{"_index":200,"title":{},"body":{"controllers/UsersController.html":{}}}],["bomfim",{"_index":131,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["bomfim'})@isstring()@isnotempty",{"_index":115,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["boolean",{"_index":119,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":278,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":374,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":372,"title":{},"body":{"modules.html":{}}}],["bruna",{"_index":114,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["bruna@gmail.com",{"_index":132,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["bruna@gmail.com'})@isstring()@isemail()@isnotempty",{"_index":112,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["building",{"_index":320,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":265,"title":{"changelog.html":{}},"body":{}}],["class",{"_index":40,"title":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":102,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":135,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":137,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":136,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":220,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":221,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":222,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["const",{"_index":248,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor",{"_index":228,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(prisma",{"_index":229,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["contributing",{"_index":266,"title":{"contributing.html":{}},"body":{}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":207,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":267,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":162,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":208,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":184,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(dto",{"_index":232,"title":{},"body":{"injectables/UsersService.html":{}}}],["createdat",{"_index":166,"title":{},"body":{"classes/User.html":{}}}],["createuserdto",{"_index":101,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["da",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["data",{"_index":249,"title":{},"body":{"injectables/UsersService.html":{}}}],["date",{"_index":169,"title":{},"body":{"classes/User.html":{}}}],["de",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":241,"title":{},"body":{"injectables/UsersService.html":{}}}],["defined",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":193,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":217,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":192,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleted",{"_index":262,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependencies",{"_index":55,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":130,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":332,"title":{},"body":{"index.html":{}}}],["docs",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["dto",{"_index":234,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/create",{"_index":204,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":205,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["e2e",{"_index":343,"title":{},"body":{"index.html":{}}}],["edit",{"_index":197,"title":{},"body":{"controllers/UsersController.html":{}}}],["efficient",{"_index":321,"title":{},"body":{"index.html":{}}}],["email",{"_index":106,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["enableshutdownhooks",{"_index":146,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":148,"title":{},"body":{"injectables/PrismaService.html":{}}}],["endpoints",{"_index":382,"title":{},"body":{"todo.html":{}}}],["entities/user.entity",{"_index":246,"title":{},"body":{"injectables/UsersService.html":{}}}],["error",{"_index":387,"title":{},"body":{"todo.html":{}}}],["example",{"_index":111,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["export",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":140,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["extends",{"_index":143,"title":{},"body":{"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{}}}],["false",{"_index":134,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["false})@isboolean",{"_index":122,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":180,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":181,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":212,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":188,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":319,"title":{},"body":{"index.html":{}}}],["function",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":315,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":211,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id')@apioperation({summary",{"_index":189,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apioperation({summary",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["getstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getstatus(baseurl",{"_index":75,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":263,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"todo.html":{}},"body":{}}],["grow",{"_index":350,"title":{},"body":{"index.html":{}}}],["handling",{"_index":388,"title":{},"body":{"todo.html":{}}}],["here",{"_index":361,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":368,"title":{},"body":{"index.html":{}}}],["id",{"_index":167,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":154,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["inestapplication",{"_index":149,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":72,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":73,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":329,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":331,"title":{},"body":{"index.html":{}}}],["institution",{"_index":383,"title":{},"body":{"todo.html":{}}}],["isboolean",{"_index":125,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":126,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":127,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring",{"_index":128,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["join",{"_index":357,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["kamil",{"_index":365,"title":{},"body":{"index.html":{}}}],["license",{"_index":371,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":347,"title":{},"body":{"index.html":{}}}],["local",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{}}}],["message",{"_index":260,"title":{},"body":{"injectables/UsersService.html":{}}}],["metadata",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":314,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":346,"title":{},"body":{"index.html":{}}}],["mode",{"_index":336,"title":{},"body":{"index.html":{}}}],["module",{"_index":52,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"todo.html":{}}}],["modules",{"_index":54,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":360,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":366,"title":{},"body":{"index.html":{}}}],["name",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":325,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":370,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["node.js",{"_index":318,"title":{},"body":{"index.html":{}}}],["npm",{"_index":330,"title":{},"body":{"index.html":{}}}],["object",{"_index":240,"title":{},"body":{"injectables/UsersService.html":{}}}],["objeto",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["onmoduleinit",{"_index":147,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":348,"title":{},"body":{"index.html":{}}}],["optional",{"_index":81,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":375,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":286,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partial",{"_index":257,"title":{},"body":{"injectables/UsersService.html":{}}}],["partialtype",{"_index":161,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":164,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":107,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":201,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":214,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":196,"title":{},"body":{"controllers/UsersController.html":{}}}],["please",{"_index":358,"title":{},"body":{"index.html":{}}}],["post",{"_index":199,"title":{},"body":{"controllers/UsersController.html":{}}}],["post()@apioperation({summary",{"_index":185,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["prisma",{"_index":231,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.service",{"_index":141,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":153,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":144,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":60,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":138,"title":{"injectables/PrismaService.html":{}},"body":{"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":226,"title":{},"body":{"injectables/UsersService.html":{}}}],["production",{"_index":338,"title":{},"body":{"index.html":{}}}],["progress",{"_index":386,"title":{},"body":{"todo.html":{}}}],["progressive",{"_index":317,"title":{},"body":{"index.html":{}}}],["project",{"_index":349,"title":{},"body":{"index.html":{}}}],["properties",{"_index":105,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["providers",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["read",{"_index":359,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["recebe",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["relationship",{"_index":385,"title":{},"body":{"todo.html":{}}}],["remove",{"_index":182,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":218,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":191,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":328,"title":{},"body":{"index.html":{}}}],["req",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["requisição",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["reset",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{}}}],["retorna",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["return",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":108,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":333,"title":{},"body":{"index.html":{}}}],["running",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":322,"title":{},"body":{"index.html":{}}}],["select",{"_index":253,"title":{},"body":{"injectables/UsersService.html":{}}}],["server",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"index.html":{}}}],["side",{"_index":323,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":352,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":316,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:21",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module.ts",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":276,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":139,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":245,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":142,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":150,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":152,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/users/dto/create",{"_index":103,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":160,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":165,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:2",{"_index":172,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:3",{"_index":173,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:4",{"_index":171,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:5",{"_index":174,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":175,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":170,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:9",{"_index":176,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":178,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:16",{"_index":186,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:24",{"_index":187,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:32",{"_index":190,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:40",{"_index":198,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:48",{"_index":194,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":223,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":225,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":244,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:16",{"_index":230,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:20",{"_index":233,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:31",{"_index":236,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:35",{"_index":237,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:44",{"_index":239,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:53",{"_index":238,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":334,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":337,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":339,"title":{},"body":{"index.html":{}}}],["started",{"_index":264,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"todo.html":{}},"body":{}}],["starter",{"_index":327,"title":{},"body":{"index.html":{}}}],["statements",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["stay",{"_index":362,"title":{},"body":{"index.html":{}}}],["string",{"_index":76,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["student",{"_index":384,"title":{},"body":{"todo.html":{}}}],["successfully",{"_index":261,"title":{},"body":{"injectables/UsersService.html":{}}}],["summary",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":353,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":373,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":285,"title":{},"body":{"coverage.html":{},"todo.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":342,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":345,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":344,"title":{},"body":{"index.html":{}}}],["tests",{"_index":341,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":351,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":156,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":157,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getstatus('http://localhost:3000",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["this.prisma.user.create",{"_index":252,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":259,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":255,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":256,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":258,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userselect",{"_index":254,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":209,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":210,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":213,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":219,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":216,"title":{},"body":{"controllers/UsersController.html":{}}}],["todo",{"_index":381,"title":{"todo.html":{}},"body":{}}],["touch",{"_index":363,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":243,"title":{},"body":{"injectables/UsersService.html":{}}}],["twitter",{"_index":369,"title":{},"body":{"index.html":{}}}],["type",{"_index":80,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typescript",{"_index":326,"title":{},"body":{"index.html":{}}}],["ui",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["uma",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["unit",{"_index":340,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":235,"title":{},"body":{"injectables/UsersService.html":{}}}],["unlicensed",{"_index":380,"title":{},"body":{"properties.html":{}}}],["update",{"_index":183,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":215,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":195,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatedat",{"_index":168,"title":{},"body":{"classes/User.html":{}}}],["updateuserdto",{"_index":159,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["url",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":120,"title":{"classes/User.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"todo.html":{}}}],["user.dto",{"_index":163,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":104,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":116,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":113,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":118,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:35",{"_index":123,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user`s",{"_index":110,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users",{"_index":179,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":224,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":203,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":177,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userselect",{"_index":227,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersmodule",{"_index":61,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":202,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":129,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":242,"title":{},"body":{"injectables/UsersService.html":{}}}],["version",{"_index":378,"title":{},"body":{"properties.html":{}}}],["view",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["watch",{"_index":335,"title":{},"body":{"index.html":{}}}],["website",{"_index":367,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":356,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'View application status'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:21\n                \n            \n\n\n            \n                \n                    Recebe uma requisição GET e retorna um objeto de status\nda aplicação da URL de documentação\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Objeto de status da aplicação\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Recebe uma requisição GET e retorna um objeto de status\n   * da aplicação da URL de documentação\n   * @param req Objeto de Request do Express\n   * @returns Objeto de status da aplicação\n  */\n\n  @Get()\n  @ApiOperation({\n\t\tsummary: \"View application status\",\n\t})  \n  getStatus() {\n    return this.appService.getStatus('http://localhost:3000');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [PrismaModule, UsersModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getStatus(baseUrl: string) {\n    return {\n\t\t\tstatus: \"Server is running! 🚀\",\n\t\t\tdocs: baseUrl + '/api',\n\t\t}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [AuthController],\n  providers: [AuthService]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s email', example: 'Bruna@gmail.com'})@IsString()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s name', example: 'Bruna Bomfim'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User`s password', example: '123456'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'If user is admin or server', example: false})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    description: 'User`s name',\n    example: 'Bruna Bomfim',\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({\n    description: 'User`s email',\n    example: 'Bruna@gmail.com',\n  })\n  @IsString()\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @ApiProperty({\n    description: 'User`s password',\n    example: '123456',\n  })\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty({\n    description: 'If user is admin or server',\n    example: false,\n  })\n  @IsBoolean()\n  role?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService]\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  name: string;\n  email: string;\n  password: string;\n  role?: boolean;\n\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a user'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'View all users'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'View users by id or email'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete users by id or email'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Edit users by id email'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('user')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @ApiOperation({\n\t\tsummary: \"Create a user\",\n\t})\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  @ApiOperation({\n\t\tsummary: \"View all users\",\n\t})\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n\t\tsummary: \"View users by id or email\",\n\t})\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n  \n  @Patch(':id')\n  @ApiOperation({\n\t\tsummary: \"Edit users by id email\",\n\t})\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({\n\t\tsummary: \"Delete users by id or email\",\n\t})\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    name: true,\n    email: true,\n    password: false,\n    role: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UsersService {\n  private userSelect = {\n    id: true,\n    name: true,\n    email: true,\n    password: false,\n    role: true,\n  };\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(dto: CreateUserDto) {\n    const data: User = {\n      ...dto,\n      password: await bcrypt.hash(dto.password, 10),\n    };\n    return await this.prisma.user.create({\n      data,\n      select: this.userSelect,\n    });\n  }\n\n  async findAll() {\n    return await this.prisma.user.findMany({ select: this.userSelect });\n  }\n\n  async findOne(id: string) {\n    return await this.prisma.user.findUnique({\n      where: {\n        id,\n      },\n      select: this.userSelect,\n    });\n  }\n\n  async update(id: string, dto: UpdateUserDto) {\n    const data: Partial = { ...dto };\n    return await this.prisma.user.update({\n      where: { id },\n      data,\n      select: this.userSelect,\n    });\n  }\n\n  async remove(id: string) {\n    await this.prisma.user.delete({\n      where: {\n        id,\n      },\n    });\n    return { message: 'User successfully deleted' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.0.5\n        \n            @prisma/client : ^4.1.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.5.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nEndpoints\n\nInstitution\nStudent\nTable relationship\n\nIn Progress\n\nUser error handling\nAuth module\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
